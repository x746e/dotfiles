* Add README.
* Rewrite install script into python (e.g. see
  https://github.com/koalaman/shellcheck/wiki/SC2044 for why it's not that a
  great idea to write shell scripts.).  In case if I will ever need to install
  dotfiles on a box without python, I can add a minimal shell script.
  BTW, the script is already not very portable, as it uses zsh specific read -k
  (which is the same as bash's read -n 1).
* highlight broken links in ls
* Add a script, executed by cron, that checks that dotfiles repos are up to
  date:
  - ~/dotfiles and ~/dotfiles-ext doesn't have any uncommitted changes
  - For both repos there's nothing to push or pull
  The script should be installed somewhere to /etc/cron.d(?) by the main
  installer script.

== vim
* Syntax highlighting of SQL inside python files.  See how it was done for
  python inside vimscript.  Or for js inside html.
* In python don't highlight all code after " till the end as string.  See how
  it was done for vimscript.

* revamp vim config (something like oh-my-vim?)
* scrollbar with error/search/modified marks like in pycharm
* version control plugin

* auto-saving, as in pycharm?

* store undo history between vim launches

* change tmux window title.

=== IDE-like features
* responsive linter
* show-usages for symbol under cursor, using clangd or something that
  understands the semantic
* show-usages for symbol under cursor, using tags
* go-to-definition, using clangd and/or tags, maybe something like kythe.io
* autocompletion
* Refactoring.  Variable/member/function/class rename; factor out a method.

== zsh
* try oh-my-zsh
* look for a scheme: http://zshthem.es/
* fix shell linter for .zshrc

* save output of each command
** allow referencing outputs somehow, e.g. get_out -4 | grep XXX
** ncurses interface that allows folding outputs, filtering, whatever

=== prompt
* add start-time of the command
* when there are suspended jobs, show it somehow in the prompt
* display colored/signal-aware exit status in prompt

=== zsh version-control-status in prompt
* for version control status information in the prompt -- update it when
  something changes in the repo.
* make it version control agnostic
* things to display:
** branch/bookmark name
** any files changed?
** any untracked files?
** is there some strange state, like in the middle of merge, rebase; any unmerged conflicts?
** is there stashed/shelved changes?
** some review-related info?

=== editor
* regex replace in zle?
* `f` as in vim.
* edit current line in vim


== tmux
=== window titles
* use name of resumed job instead of `fg`.
* shorten names more then X symbols.
* remove 'nocorrect' from the beginning.
* man zshmisc -> zshmisc(1)
